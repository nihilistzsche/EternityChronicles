# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

variables:
  DEPENDABOT_IMAGE: docker.io/andrcuns/dependabot-gitlab:0.16.0

.dependabot-gitlab:
  image:
    name: $DEPENDABOT_IMAGE
    entrypoint: [""]
  variables:
    GIT_STRATEGY: none
    RAILS_ENV: production
    SECRET_KEY_BASE: key
    PACKAGE_MANAGER: $CI_JOB_NAME
    SETTINGS__GITLAB_URL: $CI_SERVER_URL
    SETTINGS__STANDALONE: "true"
    SETTINGS__LOG_COLOR: "true"
  script:
    - cd /home/dependabot/app
    - bundle exec rake "dependabot:update[$PROJECT_PATH,$PACKAGE_MANAGER,$DIRECTORY]"

nuget:
  extends: .dependabot-gitlab
  rules:
    - if: $DEPENDENCY_UPDATES_DISABLED
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $PACKAGE_MANAGER_SET =~ /\bnuget\b/'

stages:          # List of stages for jobs, and their order of execution
  - nuget
  - build
  - test

build-job:       # This job runs in the build stage, which runs first.
  artifacts:
    paths:
      - "*/bin"
  stage: build
  script:
    - echo "Compiling the code..."
    - nuget restore EternityChronicles.sln
    - msbuild EternityChronicles.sln -m -property:Configuration=Release
    - echo "Compile complete."

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests..."
    - nunit3-console EternityChronicles.Tests/bin/Release/EternityChronicles.Tests.dll
    - echo "Unit Testing complete."
