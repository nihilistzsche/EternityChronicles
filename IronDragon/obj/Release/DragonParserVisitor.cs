//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\Documents\Source\Repos\EternityChronicles\IronDragon\Parser\DragonParser.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace IronDragon.Parser {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="DragonParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IDragonParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] DragonParser.ProgramContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.block_contents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock_contents([NotNull] DragonParser.Block_contentsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] DragonParser.TermContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.term_top_level_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm_top_level_statement([NotNull] DragonParser.Term_top_level_statementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.top_level_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTop_level_statement([NotNull] DragonParser.Top_level_statementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.conditional_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditional_statement([NotNull] DragonParser.Conditional_statementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] DragonParser.StatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] DragonParser.BlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.switch_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitch_construct([NotNull] DragonParser.Switch_constructContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.case_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCase_block([NotNull] DragonParser.Case_blockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.default_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefault_block([NotNull] DragonParser.Default_blockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.loop_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoop_construct([NotNull] DragonParser.Loop_constructContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.for_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFor_construct([NotNull] DragonParser.For_constructContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.for_in_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFor_in_construct([NotNull] DragonParser.For_in_constructContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.until_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUntil_construct([NotNull] DragonParser.Until_constructContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.do_until_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDo_until_construct([NotNull] DragonParser.Do_until_constructContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.while_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhile_construct([NotNull] DragonParser.While_constructContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.do_while_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDo_while_construct([NotNull] DragonParser.Do_while_constructContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.unless_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnless_construct([NotNull] DragonParser.Unless_constructContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.if_else_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_else_construct([NotNull] DragonParser.If_else_constructContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.else_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElse_part([NotNull] DragonParser.Else_partContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.return_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturn_expression([NotNull] DragonParser.Return_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] DragonParser.ExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.prefix_increment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrefix_increment([NotNull] DragonParser.Prefix_incrementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.postfix_increment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostfix_increment([NotNull] DragonParser.Postfix_incrementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] DragonParser.AssignmentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.prefix_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrefix_op([NotNull] DragonParser.Prefix_opContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.postfix_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostfix_op([NotNull] DragonParser.Postfix_opContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArg([NotNull] DragonParser.ArgContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.op_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOp_expression([NotNull] DragonParser.Op_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.pipe_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPipe_op([NotNull] DragonParser.Pipe_opContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.pipe_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPipe_expression([NotNull] DragonParser.Pipe_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.logical_or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogical_or_expression([NotNull] DragonParser.Logical_or_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.logical_xor_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogical_xor_expression([NotNull] DragonParser.Logical_xor_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.logical_and_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogical_and_expression([NotNull] DragonParser.Logical_and_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.equality_op_eq_neq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEquality_op_eq_neq([NotNull] DragonParser.Equality_op_eq_neqContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.equality_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEquality_op([NotNull] DragonParser.Equality_opContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.equality_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEquality_expression([NotNull] DragonParser.Equality_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.comparison_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparison_op([NotNull] DragonParser.Comparison_opContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.comparison_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparison_expression([NotNull] DragonParser.Comparison_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.bitwise_or_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitwise_or_op([NotNull] DragonParser.Bitwise_or_opContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.bitwise_or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitwise_or_expression([NotNull] DragonParser.Bitwise_or_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.bitwise_and_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitwise_and_expression([NotNull] DragonParser.Bitwise_and_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.shift_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShift_op([NotNull] DragonParser.Shift_opContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.shift_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShift_expression([NotNull] DragonParser.Shift_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.additive_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditive_op([NotNull] DragonParser.Additive_opContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.additive_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditive_expression([NotNull] DragonParser.Additive_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.multiplicative_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicative_op([NotNull] DragonParser.Multiplicative_opContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.multiplicative_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicative_expression([NotNull] DragonParser.Multiplicative_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.unary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnary_expression([NotNull] DragonParser.Unary_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.power_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPower_expression([NotNull] DragonParser.Power_expressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtom([NotNull] DragonParser.AtomContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.primary_right_side_parens"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimary_right_side_parens([NotNull] DragonParser.Primary_right_side_parensContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.primary_right_side_access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimary_right_side_access([NotNull] DragonParser.Primary_right_side_accessContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.primary_right_side_yield_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimary_right_side_yield_block([NotNull] DragonParser.Primary_right_side_yield_blockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.primary_right_side_parens_access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimary_right_side_parens_access([NotNull] DragonParser.Primary_right_side_parens_accessContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.primary_function_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimary_function_call([NotNull] DragonParser.Primary_function_callContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.primary_left_side"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimary_left_side([NotNull] DragonParser.Primary_left_sideContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimary([NotNull] DragonParser.PrimaryContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.hash"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHash([NotNull] DragonParser.HashContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.single_hash_key"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingle_hash_key([NotNull] DragonParser.Single_hash_keyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.hash_key"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHash_key([NotNull] DragonParser.Hash_keyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArray([NotNull] DragonParser.ArrayContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] DragonParser.LiteralContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.symbol"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSymbol([NotNull] DragonParser.SymbolContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.lvalue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLvalue([NotNull] DragonParser.LvalueContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.lvalue_instance_ref_opt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLvalue_instance_ref_opt([NotNull] DragonParser.Lvalue_instance_ref_optContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.lvalue_instance_ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLvalue_instance_ref([NotNull] DragonParser.Lvalue_instance_refContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.lvalue_method_change"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLvalue_method_change([NotNull] DragonParser.Lvalue_method_changeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.lvalue_access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLvalue_access([NotNull] DragonParser.Lvalue_accessContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable([NotNull] DragonParser.VariableContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.call_args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCall_args([NotNull] DragonParser.Call_argsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.call_arg_single_hash"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCall_arg_single_hash([NotNull] DragonParser.Call_arg_single_hashContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.call_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCall_arg([NotNull] DragonParser.Call_argContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.first_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFirst_arg([NotNull] DragonParser.First_argContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.first_var_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFirst_var_arg([NotNull] DragonParser.First_var_argContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.first_block_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFirst_block_arg([NotNull] DragonParser.First_block_argContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.end_var_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnd_var_arg([NotNull] DragonParser.End_var_argContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.end_block_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnd_block_arg([NotNull] DragonParser.End_block_argContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.next_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNext_arg([NotNull] DragonParser.Next_argContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.definition_argument_list_no_paren"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefinition_argument_list_no_paren([NotNull] DragonParser.Definition_argument_list_no_parenContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.definition_argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefinition_argument_list([NotNull] DragonParser.Definition_argument_listContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.function_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_name([NotNull] DragonParser.Function_nameContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.function_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_definition([NotNull] DragonParser.Function_definitionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.anonymous_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnonymous_function([NotNull] DragonParser.Anonymous_functionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.yield_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitYield_block([NotNull] DragonParser.Yield_blockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.do_yield_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDo_yield_block([NotNull] DragonParser.Do_yield_blockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.parallel_assign_left"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParallel_assign_left([NotNull] DragonParser.Parallel_assign_leftContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.parallel_assign_left_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParallel_assign_left_item([NotNull] DragonParser.Parallel_assign_left_itemContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.parallel_assign_right"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParallel_assign_right([NotNull] DragonParser.Parallel_assign_rightContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.parallel_assign_right_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParallel_assign_right_item([NotNull] DragonParser.Parallel_assign_right_itemContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.alias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAlias([NotNull] DragonParser.AliasContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.alias_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAlias_part([NotNull] DragonParser.Alias_partContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.include"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInclude([NotNull] DragonParser.IncludeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.class_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClass_declaration([NotNull] DragonParser.Class_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.anonymous_class_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnonymous_class_declaration([NotNull] DragonParser.Anonymous_class_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.module_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitModule_declaration([NotNull] DragonParser.Module_declarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.begin_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBegin_construct([NotNull] DragonParser.Begin_constructContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.rescue_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRescue_block([NotNull] DragonParser.Rescue_blockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.rescue_else_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRescue_else_block([NotNull] DragonParser.Rescue_else_blockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.rescue_ensure_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRescue_ensure_block([NotNull] DragonParser.Rescue_ensure_blockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.identifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifiers([NotNull] DragonParser.IdentifiersContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DragonParser.sync_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSync_construct([NotNull] DragonParser.Sync_constructContext context);
}
} // namespace IronDragon.Parser
